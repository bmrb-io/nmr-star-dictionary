
####################
## ITEM_TYPE_LIST ##
####################
#
#
#  The regular expressions defined here are not compliant
#  with the POSIX 1003.2 standard as they include the 
#  '\n' and '\t' special characters. These regular expressions
#  have been tested using the version 0.12 of Richard Stallman's
#  GNU regular expression libary in POSIX mode. 
#
#                                                                            
# For some data items, a standard syntax is assumed. The syntax is           
#   described for each data item in the dictionary, but is summarized here:  
#                                                                            
#   Names:     The family name(s) followed by a comma, precedes the first    
#              name(s) or initial(s).                                        
#                                                                            
#   Telephone numbers:                                                       
#              The international code is given in brackets and any extension 
#              number is preceded by 'ext'.                                  
#                                                                            
#   Dates:     In the form yyyy-mm-dd.                                       
#                                                                            
##############################################################################


     loop_
       _Item_type_list.Code
       _Item_type_list.Primitive_code
       _Item_type_list.Construct
       _Item_type_list.Detail
       _Item_type_list.Dictionary_ID

               code      char
               '[_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words ...
;
BMOD
               ucode      uchar
               '[_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
BMOD
               line      char
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items ...
;
BMOD
               uline      uchar
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items (case insensitive)...
;
BMOD
               text      char
               '[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              text item types / multi-line text ...
;
BMOD
               int       numb
               '-?[0-9]+'
;              int item types are the subset of numbers that are the negative 
               or positive integers.
;
BMOD
               float     numb
               '-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
BMOD
               name      uchar
               '_[_A-Za-z0-9]+\.[][_A-Za-z0-9%-]+'
;              name item types take the form...
;
BMOD
               idname    uchar
               '[_A-Za-z0-9]+'
;              idname item types take the form...
;
BMOD
               any       char
               '.*'
;              A catch all for items that may take any form...
;
BMOD
               yyyy-mm-dd  char
                '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9]-[0-9][0-9]'
;
               Standard format for CIF dates.
;
BMOD
               uchar3    uchar
              '[+]?[A-Za-z0-9]?[A-Za-z0-9][A-Za-z0-9]'
;
               data item for 3 character codes
;
BMOD
               uchar1    uchar
              '[+]?[A-Za-z0-9]'
;
               data item for 1 character codes
;
BMOD
               yes_no   char
               '(yes)|(no)'
;
               data item for boolean codes that have values of 'yes' or 'no'
;
BMOD
               symop    char
               '([1-9]|[1-9][0-9]|1[0-8][0-9]|19[0-2])(_[1-9][1-9][1-9])?'
;              symop item types take the form n_klm, where n refers to the
               symmetry operation that is applied to the coordinates in the
               ATOM_SITE category identified by _atom_site_label.  It must
               match a number given in _symmetry_equiv_pos_site_id.

               k, l, and m refer to the translations that are subsequently
               applied to the symmetry transformed coordinates to generate
               the atom used.  These translations (x,y,z) are related to
               (k,l,m) by
                     k = 5 + x
                     l = 5 + y
                     m = 5 + z
               By adding 5 to the translations, the use of negative numbers
               is avoided.
;
BMOD
               atcode      char
               '[][ _(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              Character data type for atom names  ...
;
BMOD
               yyyy-mm-dd:hh:mm  char
    '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9](-[0-9]?[0-9])?(:[0-9]?[0-9]:[0-9][0-9])?'
;
               Standard format for CIF dates with optional time stamp.
;
BMOD
               fax      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
BMOD
               phone      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
BMOD
               email      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
BMOD
               int-range       numb
               '-?[0-9]+(--?[0-9]+)?'
;              int item types are the subset of numbers that are the negative 
               or positive integers with optional range.
;
BMOD
               float-range     numb

'-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?(--?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
BMOD
       
#
               binary    char
;\n--CIF-BINARY-FORMAT-SECTION--\n\
[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*\
\n--CIF-BINARY-FORMAT-SECTION----
;
;              binary items are presented as MIME-like ascii-encoded
               sections in an imgCIF.  In a CBF, raw octet streams
               are used to convey the same information.
;
BMOD

# NMR-STAR additions

              framecode   char
              '[.;:"&<>(){}'`~!$%A-Za-z0-9*|+-][_.;:"&<>(){}'`~!$%A-Za-z0-9*|+-]*' 
;             A value that points to a save frame.
;
BMOD

    stop_

#####################
## ITEM_UNITS_LIST ##
#####################

     loop_
       _Item_units_list.Code
       _Item_units_list.Detail
       _Item_units_list.Dictionary_ID
#
     'metres'                 'metres'                                 BMOD
     'centimetres'            'centimetres (meters * 10^( -2))'        BMOD
     'millimetres'            'millimetres (meters * 10^( -3))'        BMOD
     'nanometres'             'nanometres  (meters * 10^( -9))'        BMOD
     'angstroms'              'angstroms   (meters * 10^(-10))'        BMOD
     'picometres'             'picometres  (meters * 10^(-12))'        BMOD
     'femtometres'            'femtometres (meters * 10^(-15))'        BMOD
#
     'reciprocal_centimetres' 'reciprocal centimetres (meters * 10^( -2)^-1)'        BMOD
     'reciprocal_millimetres' 'reciprocal millimetres (meters * 10^( -3)^-1)'        BMOD
     'reciprocal_nanometres'  'reciprocal nanometres  (meters * 10^( -9)^-1)'        BMOD
     'reciprocal_angstroms'   'reciprocal angstroms   (meters * 10^(-10)^-1)'        BMOD
     'reciprocal_picometres'  'reciprocal picometres  (meters * 10^(-12)^-1)'        BMOD
#
     'nanometres_squared'     'nanometres squared (meters * 10^( -9))^2'             BMOD
     'angstroms_squared'      'angstroms squared  (meters * 10^(-10))^2'             BMOD
     '8pi2_angstroms_squared' '8pi^2 * angstroms squared (meters * 10^(-10))^2'      BMOD
     'picometres_squared'     'picometres squared (meters * 10^(-12))^2'             BMOD
#
     'nanometres_cubed'       'nanometres cubed (meters * 10^( -9))^3'               BMOD
     'angstroms_cubed'        'angstroms cubed  (meters * 10^(-10))^3'               BMOD
     'picometres_cubed'       'picometres cubed (meters * 10^(-12))^3'               BMOD
#
     'kilopascals'            'kilopascals'                                          BMOD
     'gigapascals'            'gigapascals'                                          BMOD
#
     'hours'                  'hours'                                                BMOD
     'minutes'                'minutes'                                              BMOD
     'seconds'                'seconds'                                              BMOD
     'microseconds'           'microseconds'                                         BMOD
#
     'degrees'                'degrees (of arc)'                                     BMOD
#
     'degrees_per_minute'     'degrees (of arc) per minute'                          BMOD
#
     'celsius'                'degrees (of temperature) Celsius'                     BMOD
     'kelvins'                'degrees (of temperature) Kelvin'                      BMOD
#
     'electrons'              'electrons'                                            BMOD
#
     'electrons_squared'      'electrons squared'                                    BMOD
#
     'electrons_per_nanometres_cubed'
; electrons per nanometres cubed (meters * 10^( -9))^3
;
BMOD
     'electrons_per_angstroms_cubed'
; electrons per angstroms  cubed (meters * 10^(-10))^3
;
BMOD
     'electrons_per_picometres_cubed'
; electrons per picometres cubed (meters * 10^(-12))^3
;
BMOD
     'kilowatts'              'kilowatts'           BMOD
     'milliamperes'           'milliamperes'        BMOD
     'kilovolts'              'kilovolts'           BMOD
#
     'arbitrary'
; arbitrary system of units.
;
BMOD
#
     'angstroms_degrees'      'angstroms * degrees'                            BMOD
#
     'degrees_squared'        'degrees squared'                                BMOD
#
     'mg_per_ml'              'milliliter per milligram'                       BMOD
#
     'ml_per_min'             'milliliter per minute'                          BMOD
#
     'milliliters'             'liter / 1000'                                  BMOD
#
     'milligrams'             'grams / 1000'                                   BMOD
#
     'megadaltons'            'megadaltons'                                    BMOD
     'microns_squared'        'microns squared'                                BMOD
     'microns'                'microns'                                        BMOD
#     'millimeters'            'millimeters'                                   BMOD
     'electrons_angstrom_squared'   'electrons square angstrom'                BMOD
     'electron_volts'         'electron volts'                                 BMOD
#     'mg/ml'                  'mg per milliliter'                             BMOD
     'millimolar'             'millimolar'                                     BMOD
     'megagrams_per_cubic_metre'       'megagrams per cubic metre'             BMOD 
     'pixels_per_millimetre'      'pixels per millimetre'                      BMOD
     'counts'                 'counts'                                         BMOD
     'counts_per_photon'      'counts per photon'                              BMOD
#
     stop_

     loop_
        _Item_units_conversion.From_code
        _Item_units_conversion.To_code
        _Item_units_conversion.Operator
        _Item_units_conversion.Factor
        _Item_units_conversion.Dictionary_ID

###
     'metres'                   'centimetres'              '*'   1.0E+02        BMOD
     'metres'                   'millimetres'              '*'   1.0E+03        BMOD
     'metres'                   'nanometres'               '*'   1.0E+09        BMOD
     'metres'                   'angstroms'                '*'   1.0E+10        BMOD
     'metres'                   'picometres'               '*'   1.0E+12        BMOD
     'metres'                   'femtometres'              '*'   1.0E+15        BMOD

     'centimetres'              'millimetres'              '*'   1.0E+01        BMOD
     'centimetres'              'nanometres'               '*'   1.0E+07        BMOD
     'centimetres'              'angstroms'                '*'   1.0E+08        BMOD
     'centimetres'              'picometres'               '*'   1.0E+10        BMOD
     'centimetres'              'femtometres'              '*'   1.0E+13        BMOD
#
     'millimetres'              'centimetres'              '*'   1.0E-01        BMOD
     'millimetres'              'nanometres'               '*'   1.0E+06        BMOD
     'millimetres'              'angstroms'                '*'   1.0E+07        BMOD
     'millimetres'              'picometres'               '*'   1.0E+09        BMOD
     'millimetres'              'femtometres'              '*'   1.0E+12        BMOD
#
     'nanometres'               'centimetres'              '*'   1.0E-07        BMOD
     'nanometres'               'millimetres'              '*'   1.0E-06        BMOD
     'nanometres'               'angstroms'                '*'   1.0E+01        BMOD
     'nanometres'               'picometres'               '*'   1.0E+03        BMOD
     'nanometres'               'femtometres'              '*'   1.0E+06        BMOD
#
     'angstroms'                'centimetres'              '*'   1.0E-08        BMOD
     'angstroms'                'millimetres'              '*'   1.0E-07        BMOD
     'angstroms'                'nanometres'               '*'   1.0E-01        BMOD
     'angstroms'                'picometres'               '*'   1.0E+02        BMOD
     'angstroms'                'femtometres'              '*'   1.0E+05        BMOD
#
     'picometres'               'centimetres'              '*'   1.0E-10        BMOD
     'picometres'               'millimetres'              '*'   1.0E-09        BMOD
     'picometres'               'nanometres'               '*'   1.0E-03        BMOD
     'picometres'               'angstroms'                '*'   1.0E-02        BMOD
     'picometres'               'femtometres'              '*'   1.0E+03        BMOD
#
     'femtometres'              'centimetres'              '*'   1.0E-13        BMOD
     'femtometres'              'millimetres'              '*'   1.0E-12        BMOD
     'femtometres'              'nanometres'               '*'   1.0E-06        BMOD
     'femtometres'              'angstroms'                '*'   1.0E-05        BMOD
     'femtometres'              'picometres'               '*'   1.0E-03        BMOD
###
     'reciprocal_centimetres'   'reciprocal_millimetres'   '*'   1.0E-01        BMOD
     'reciprocal_centimetres'   'reciprocal_nanometres'    '*'   1.0E-07        BMOD
     'reciprocal_centimetres'   'reciprocal_angstroms'     '*'   1.0E-08        BMOD
     'reciprocal_centimetres'   'reciprocal_picometres'    '*'   1.0E-10        BMOD
#
     'reciprocal_millimetres'   'reciprocal_centimetres'   '*'   1.0E+01        BMOD
     'reciprocal_millimetres'   'reciprocal_nanometres'    '*'   1.0E-06        BMOD
     'reciprocal_millimetres'   'reciprocal_angstroms'     '*'   1.0E-07        BMOD
     'reciprocal_millimetres'   'reciprocal_picometres'    '*'   1.0E-09        BMOD
# 
     'reciprocal_nanometres'    'reciprocal_centimetres'   '*'   1.0E+07        BMOD
     'reciprocal_nanometres'    'reciprocal_millimetres'   '*'   1.0E+06        BMOD
     'reciprocal_nanometres'    'reciprocal_angstroms'     '*'   1.0E-01        BMOD
     'reciprocal_nanometres'    'reciprocal_picometres'    '*'   1.0E-03        BMOD
#
     'reciprocal_angstroms'     'reciprocal_centimetres'   '*'   1.0E+08        BMOD
     'reciprocal_angstroms'     'reciprocal_millimetres'   '*'   1.0E+07        BMOD
     'reciprocal_angstroms'     'reciprocal_nanometres'    '*'   1.0E+01        BMOD
     'reciprocal_angstroms'     'reciprocal_picometres'    '*'   1.0E-02        BMOD

     'reciprocal_picometres'    'reciprocal_centimetres'   '*'   1.0E+10        BMOD
     'reciprocal_picometres'    'reciprocal_millimetres'   '*'   1.0E+09        BMOD
     'reciprocal_picometres'    'reciprocal_nanometres'    '*'   1.0E+03        BMOD
     'reciprocal_picometres'    'reciprocal_angstroms'     '*'   1.0E+01        BMOD
###
     'nanometres_squared'       'angstroms_squared'        '*'   1.0E+02        BMOD
     'nanometres_squared'       'picometres_squared'       '*'   1.0E+06        BMOD
#
     'angstroms_squared'        'nanometres_squared'       '*'   1.0E-02        BMOD
     'angstroms_squared'        'picometres_squared'       '*'   1.0E+04        BMOD
     'angstroms_squared'        '8pi2_angstroms_squared'   '*'   78.9568        BMOD

#
     'picometres_squared'       'nanometres_squared'       '*'   1.0E-06        BMOD
     'picometres_squared'       'angstroms_squared'        '*'   1.0E-04        BMOD
###
     'nanometres_cubed'         'angstroms_cubed'          '*'   1.0E+03        BMOD
     'nanometres_cubed'         'picometres_cubed'         '*'   1.0E+09        BMOD
#
     'angstroms_cubed'          'nanometres_cubed'         '*'   1.0E-03        BMOD
     'angstroms_cubed'          'picometres_cubed'         '*'   1.0E+06        BMOD
#
     'picometres_cubed'         'nanometres_cubed'         '*'   1.0E-09        BMOD
     'picometres_cubed'         'angstroms_cubed'          '*'   1.0E-06        BMOD
###
     'kilopascals'              'gigapascals'              '*'   1.0E-06        BMOD
     'gigapascals'              'kilopascals'              '*'   1.0E+06        BMOD
###
     'hours'                    'minutes'                  '*'   6.0E+01        BMOD
     'hours'                    'seconds'                  '*'   3.6E+03        BMOD
     'hours'                    'microseconds'             '*'   3.6E+09        BMOD
#
     'minutes'                  'hours'                    '/'   6.0E+01        BMOD
     'minutes'                  'seconds'                  '*'   6.0E+01        BMOD
     'minutes'                  'microseconds'             '*'   6.0E+07        BMOD
#
     'seconds'                  'hours'                    '/'   3.6E+03        BMOD
     'seconds'                  'minutes'                  '/'   6.0E+01        BMOD
     'seconds'                  'microseconds'             '*'   1.0E+06        BMOD
#
     'microseconds'             'hours'                    '/'   3.6E+09        BMOD
     'microseconds'             'minutes'                  '/'   6.0E+07        BMOD
     'microseconds'             'seconds'                  '/'   1.0E+06        BMOD
###
     'celsius'                  'kelvins'                  '-'     273.0        BMOD
     'kelvins'                  'celsius'                  '+'     273.0        BMOD
###
     'electrons_per_nanometres_cubed'                      
     'electrons_per_angstroms_cubed'                       '*'   1.0E-03        BMOD
     'electrons_per_nanometres_cubed'                       
     'electrons_per_picometres_cubed'                      '*'   1.0E-09        BMOD
#
     'electrons_per_angstroms_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E+03        BMOD
     'electrons_per_angstroms_cubed'
     'electrons_per_picometres_cubed'                      '*'   1.0E-06        BMOD
#
     'electrons_per_picometres_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E+09        BMOD
     'electrons_per_picometres_cubed'
     'electrons_per_angstroms_cubed'                       '*'   1.0E+06        BMOD
###
 
  stop_

save_
